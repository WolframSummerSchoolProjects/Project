(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[   2698388,      48288]
NotebookOptionsPosition[   2680700,      47994]
NotebookOutlinePosition[   2681248,      48016]
CellTagsIndexPosition[   2681169,      48011]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Rooftop Recognition for Solar Energy Potential", "Title",ExpressionUUID->"6eb8d7e2-68b2-40b9-8975-a91f4583550b"],

Cell["Last modified on: Sunday, July 8, 2018 at 17:15", "TemplateInstructions",
 Deployed->True,
 Background->RGBColor[0.75, 0.75, 0.75],
 CellTags->
  "LastModified",ExpressionUUID->"b4592abc-43f8-42aa-b1b7-e79936ced8f2"],

Cell["\<\
The aim of this project is to detect the rooftop of buildings to determine \
the available area at different locations and to identify the most suitable \
ones for solar energy application such as solar PV using Neural Networks and \
satellite imagery.\
\>", "Text",ExpressionUUID->"ad89a79b-2f79-4340-8328-8983ddc25c86"],

Cell[CellGroupData[{

Cell["The Data Set", "Chapter",ExpressionUUID->"f915ceb0-8ac6-4aed-9a4f-fef1b9b2353b"],

Cell[CellGroupData[{

Cell["Importing", "Subchapter",ExpressionUUID->"531b5bef-53b0-4bda-8afb-7839e58309c9"],

Cell["Set the working directory:", "CodeText",ExpressionUUID->"a18d1093-42c1-4075-a811-b2953c4c8cd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\</Volumes/ECG/ProjectWSS/AerialImageDataset/\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"f91a5832-de81-4c02-af5a-ef4e9a977e86"],

Cell[BoxData["\<\"/Volumes/ECG/ProjectWSS/AerialImageDataset\"\>"], "Output",
 CellLabel->"Out[1]=",ExpressionUUID->"dc865f2b-6cab-48da-bac3-f82a31891fb4"]
}, Open  ]],

Cell["Select the images for the input and those for the results:", "CodeText",ExpressionUUID->"bcc4d48b-f63b-4600-803d-433ebeee5534"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainFilesInput", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "\"\<train/images/*.tif\>\"", "]"}], ",", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"StringMatchQ", "[", 
        RowBox[{"#", ",", 
         RowBox[{"___", "~~", "\"\<._\>\"", "~~", "___"}]}], "]"}]}], "&"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainFilesResult", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<train/images/\>\"", "\[Rule]", "\"\<train/gt/\>\""}]}], 
      "]"}], "&"}], "/@", "trainFilesInput"}]}], ";"}]}], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"fd8bfb15-d513-42db-a0b5-c618894cb7c2"],

Cell["Import an image to test:", "CodeText",ExpressionUUID->"914b8e88-1635-428b-868a-c275413ce874"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgInput", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "trainFilesInput", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgResult", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "trainFilesResult", "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"43f867f5-921a-479e-9f72-c25bf65a5c4b"],

Cell["\<\
Partition of the images in 100 from a 5000x5000 to images 500x500 :\
\>", "CodeText",ExpressionUUID->"65628466-50ca-4574-8d9a-a897ff408cdc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"splicesInput", "=", 
   RowBox[{"Join", "@@", 
    RowBox[{"ImagePartition", "[", 
     RowBox[{"imgInput", ",", "500"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"splicesResults", "=", 
   RowBox[{"Join", "@@", 
    RowBox[{"ImagePartition", "[", 
     RowBox[{"imgResult", ",", "500"}], "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"e0b37e1d-7a3a-4ca2-9cc2-4098b1829131"],

Cell["Check the size of the file:", "CodeText",ExpressionUUID->"fe425d33-3416-4de0-90cc-3fcc1621227c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", 
   RowBox[{"ImageData", "[", 
    RowBox[{
    "splicesResults", "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}],
     "]"}], "]"}], " ", "//", " ", "ByteCount"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"89f67a38-625f-43a2-9691-5052af513d87"],

Cell[BoxData["2000152"], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"c545143b-7ad9-4e90-9f64-0c7f68272176"]
}, Open  ]],

Cell["\<\
Due to the Join we have a list of 100 files that contain the 10x10 images \
that compose the original:\
\>", "CodeText",ExpressionUUID->"650fd6fe-9aa7-458f-b3b4-5edb6c30785d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "splicesInput", "]"}]], "Input",
 CellLabel->"In[83]:=",ExpressionUUID->"392715b9-3a39-4ff1-bc0d-e98024f2203d"],

Cell[BoxData["100"], "Output",
 CellLabel->"Out[83]=",ExpressionUUID->"cec562a9-8594-4b87-b3c5-44d5190b8ec4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assemble Images", "Subchapter",ExpressionUUID->"b71203ef-8de2-4d85-b90e-a1874d711b1f"],

Cell[BoxData[
 RowBox[{"assambleImage", "=", 
  RowBox[{"ImageAssemble", "[", 
   RowBox[{"splicesInput", "\[LeftDoubleBracket]", 
    RowBox[{"41", ";;", "50"}], "\[RightDoubleBracket]"}], "]"}]}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"d43a2ca4-596b-4e36-b904-550908aa596e"],

Cell[BoxData[
 RowBox[{"assambleMask", "=", 
  RowBox[{"ImageAssemble", "[", 
   RowBox[{"Image", "/@", 
    RowBox[{"Round", "[", 
     RowBox[{"ImageData", "/@", 
      RowBox[{"splicesResults", "\[LeftDoubleBracket]", 
       RowBox[{"41", ";;", "50"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"c11a142e-09df-496f-9100-8778cc59814f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compose ", "Subchapter",ExpressionUUID->"bc292344-c874-47fc-aa3b-daec9a4ab95c"],

Cell["Compose the images to see if the image match.", "Text",ExpressionUUID->"622aa79b-6b7e-44c9-a3c1-00d7c466fc57"],

Cell[BoxData[
 RowBox[{"ImageCompose", "[", 
  RowBox[{"assambleImage", ",", 
   RowBox[{"{", 
    RowBox[{"assambleMask", ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"348ae733-b7bc-45f7-b790-450278a25234"],

Cell[BoxData[
 RowBox[{"ImageCompose", "[", 
  RowBox[{
   RowBox[{
   "splicesInput", "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "splicesResults", "\[LeftDoubleBracket]", "10", 
      "\[RightDoubleBracket]"}], ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"f68865b2-5502-44e2-ba6d-42cded56ea35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Association", "Subchapter",ExpressionUUID->"4ea55356-bf1b-48a8-a4ee-fa354471679a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mxTrain", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"splicesInput", "\[Rule]", " ", "splicesResults"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"89a8b1f0-8a87-4781-9e1c-5d6bd4bb6c50"],

Cell[BoxData[
 RowBox[{"ImageCompose", "[", 
  RowBox[{
   RowBox[{"Keys", "[", 
    RowBox[{
    "mxTrain", "\[LeftDoubleBracket]", "20", "\[RightDoubleBracket]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Values", "[", 
      RowBox[{
      "mxTrain", "\[LeftDoubleBracket]", "20", "\[RightDoubleBracket]"}], 
      "]"}], ",", "0.4"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"f571e71d-2992-42d1-b26c-f3bad7e62c96"],

Cell["First try to export the MX file:", "CodeText",ExpressionUUID->"6b0cffd3-a8c9-4253-bd6d-65332cdc178e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<File.mx\>\"", ",", "mxTrain"}], "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"838c25cd-1a5f-4578-b784-f6822b1ff187"],

Cell[BoxData["\<\"File.mx\"\>"], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"d253a785-8b88-43db-9659-a3abef0f6eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["mxFileCreator", "Section",ExpressionUUID->"e557db27-c514-4a08-9842-fd25135ebd81"],

Cell["Function that creates a File per each high resolution image:", \
"CodeText",ExpressionUUID->"bf18ccb7-efb9-47ed-a1cc-c66543de4080"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mxFileCreator", "[", 
   RowBox[{"trainFilesInput_", ",", "trainFilesResult_", ",", "i_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Flag", ",", "imgInput", ",", "imgResult", ",", "splicesInput", ",", 
      "splicesResults", ",", "mxTrain"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Flag", "=", 
      RowBox[{"TextString", "[", "i", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"imgInput", "=", 
      RowBox[{"Import", "[", "trainFilesInput", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"imgResult", "=", 
      RowBox[{"Import", "[", "trainFilesResult", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"splicesInput", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"ImagePartition", "[", 
        RowBox[{"imgInput", ",", "500"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"splicesResults", "=", 
      RowBox[{"Round", "[", 
       RowBox[{"ImageData", "/@", 
        RowBox[{"(", 
         RowBox[{"Join", "@@", 
          RowBox[{"ImagePartition", "[", 
           RowBox[{"imgResult", ",", "500"}], "]"}]}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"mxTrain", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"splicesInput", "\[Rule]", " ", "splicesResults"}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
       "\"\<train/MXFiles/File\>\"", "<>", "Flag", "<>", "\"\<.mx\>\""}], ",",
        "mxTrain"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellLabel->"In[27]:=",ExpressionUUID->"648a0aa0-b3a9-4400-8cda-4d86e61a8bdf"],

Cell["Try the function", "CodeText",ExpressionUUID->"ec8bfb0f-06a4-440b-9efa-d77f64a22b86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mxFileCreator", "[", 
  RowBox[{
   RowBox[{
   "trainFilesInput", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{
   "trainFilesResult", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
    ",", "1"}], "]"}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"10c6e71a-68af-4224-9c5a-5478f3379b88"],

Cell[BoxData["\<\"train/MXFiles/File1.mx\"\>"], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"0a5807dd-3c37-42d0-96bf-24d8a8912de3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"Import", "[", "\"\<train/MXFiles/File1.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"file", "\[LeftDoubleBracket]", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "100"}], "}"}], "]"}], 
  "\[RightDoubleBracket]"}]}], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"bcdb8c9e-8658-4051-8561-7afd944281b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rand", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImageCompose", "[", 
  RowBox[{
   RowBox[{"Keys", "[", 
    RowBox[{"file", "\[LeftDoubleBracket]", "rand", "\[RightDoubleBracket]"}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{"Values", "[", 
       RowBox[{
       "file", "\[LeftDoubleBracket]", "rand", "\[RightDoubleBracket]"}], 
       "]"}], "]"}], ",", "0.5"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"6891584e-21b6-4a69-a0c8-f1962105b991"],

Cell["\<\
Map all the images and convert them into association in a MX files ;\
\>", "CodeText",ExpressionUUID->"1e494a3f-def2-4085-b63c-564180ec301f"],

Cell[BoxData[
 RowBox[{"MapIndexed", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mxFileCreator", "[", 
     RowBox[{
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"Echo", "[", 
       RowBox[{"#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}]}], "]"}], "&"}], ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"trainFilesInput", ",", "trainFilesResult"}], "}"}], "]"}]}], 
  "]"}]], "Input",ExpressionUUID->"0ea0074d-bc84-40e6-9d08-d254f0e69e92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Importing the created files", "Subchapter"]], \
"Section",ExpressionUUID->"252dd6fa-4802-4fe9-8df9-dc16ea1fff70"],

Cell["Import the MX file created:", "CodeText",ExpressionUUID->"31c176e3-24a4-490c-af98-939837a74e8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fileImported", "=", 
   RowBox[{"Import", "@", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"FileNames", "[", "\"\<train/MXFiles/*.mx\>\"", "]"}], ",", 
       "1"}], "]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}]}]}], ";"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"a0f86900-c676-4621-b23f-e2dd8e7b7da0"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Test the image association", "CodeText"]], \
"Subsection",ExpressionUUID->"425c2f60-58fe-4231-ae62-1c712a28606b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rand", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImageDimensions", "[", 
  RowBox[{
   RowBox[{"Keys", "[", "fileImported", "]"}], "[", 
   RowBox[{"[", "rand", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", 
  RowBox[{
   RowBox[{"Values", "[", "fileImported", "]"}], "[", 
   RowBox[{"[", "rand", "]"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"1391198a-8e2c-46dc-822e-4ecb9e39fa8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"500", ",", "500"}], "}"}]], "Output",
 CellLabel->"Out[48]=",ExpressionUUID->"4d5c814a-67fd-46a8-85c4-fb28a4501383"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"500", ",", "500"}], "}"}]], "Output",
 CellLabel->"Out[49]=",ExpressionUUID->"54a5f8ac-92fc-4742-a3ed-2d53ead87904"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ImageCompose", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Keys", "[", "fileImported", "]"}], "\[LeftDoubleBracket]", 
    "rand", "\[RightDoubleBracket]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Values", "[", "fileImported", "]"}], "\[LeftDoubleBracket]", 
       "rand", "\[RightDoubleBracket]"}], "//", "Image"}], ",", "0.5"}], 
    "}"}]}], "]"}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"af7e71f9-a6da-4711-ad5c-e2650d729373"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The net", "Chapter",ExpressionUUID->"70ef821b-333a-4d27-b65f-fc94bbed1d15"],

Cell[CellGroupData[{

Cell["Net selection", "Subchapter",ExpressionUUID->"b7792add-1b2d-49ac-b515-c3c08ec79db1"],

Cell["\<\
Take the net model for Semantic Segmentation from the repositiories:\
\>", "CodeText",ExpressionUUID->"7aa4c8ac-a952-4993-9f30-5c13e099bdf5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netModel", "=", 
  RowBox[{
  "NetModel", "[", 
   "\"\<Ademxapp Model A1 Trained on PASCAL VOC2012 and MS-COCO Data\>\"", 
   "]"}]}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"e2972e30-e0b9-4e7d-8211-d1f0acd67ddc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["25", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 3, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 3, 
                    "$GroupNumber" -> 1, "$InputSize" -> {504, 504}, 
                    "$OutputSize" -> {504, 504}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 504, 504}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 504, 504}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> 
                    NeuralNetworks`TensorT[{64, 504, 504}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{64}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {504, 504}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 504, 504}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 504, 504}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 504, 504}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 504, 504}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 504, 504}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    64, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {504, 504}, 
                    "$OutputSize" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 504, 504}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    64, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {504, 504}, 
                    "$OutputSize" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 504, 504}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {252, 252}, 
                    "$OutputSize" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {252, 252}, 
                    "$OutputSize" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {252, 252}, 
                    "$OutputSize" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {252, 252}, 
                    "$OutputSize" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {252, 252}, 
                    "$OutputSize" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> 
                    NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 252, 252}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    128, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {252, 252}, 
                    "$OutputSize" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {252, 252}, 
                    "$OutputSize" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 252, 252}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> 
                    NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    256, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {4, 4}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.3, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{4096, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4096, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 2048, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 2048, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {4, 4}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{4096, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4096, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 2048, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 4096, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 4096, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "linear21" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{21, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{21}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 21, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{21, 63, 63}, 
                    NeuralNetworks`RealT]]], "softmax/1" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{21, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{63, 63, 21}, 
                    NeuralNetworks`RealT]]], "softmax/2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{63, 63, 21}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{63, 63, 21}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {504, 504}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, 
                    "VarianceImage" -> {0.052441, 0.050176, 0.050625}], 
                    
                    NeuralNetworks`TensorT[{3, 504, 504}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
                    14, 15, 16, 17, 18, 19, 20, 21}, "InputDepth" -> 3, 
                    "Dimensions" -> 21, "$Rank" -> 2], 
                    
                    NeuralNetworks`TensorT[{63, 63, 21}, 
                    NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"504\"", "\"504\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"504\"", "\"504\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"252\"", "\"252\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"252\"", "\"252\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"252\"", "\"252\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "12", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "12", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv6a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv6a_relu\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"21\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax/1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["TransposeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"63\"", 
                    "\"63\"", "\"21\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax/2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"63\"", 
                    "\"63\"", "\"21\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[51]=",ExpressionUUID->"46d6a355-dca3-41df-8786-6e8662ae395b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modify the Input for the size of the images", "Section",ExpressionUUID->"b88ee345-233b-4dfa-b4c1-e2880e2379b7"],

Cell["Replace the encoder to accept images 500x500:", "CodeText",ExpressionUUID->"76bebb61-c311-4bbf-9e43-88545a117156"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netModel500", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{"netModel", ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"500", ",", "500"}], "}"}], ",", 
        RowBox[{"\"\<MeanImage\>\"", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"0.485", ",", "0.456", ",", "0.406"}], "}"}]}]}], "}"}], 
      "]"}]}]}], " ", "]"}]}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"948ee0a2-c099-4307-a405-61677c30e7c4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"63\"", "\"63\"", "\"21\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["25", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 3, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 3, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{64}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    64, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 64, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    64, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 64, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    128, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    256, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {4, 4}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.3, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{4096, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4096, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 2048, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 2048, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {4, 4}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{4096, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4096, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 2048, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 4096, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "linear21" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{21, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{21}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 21, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{21, 63, 63}, 
                    NeuralNetworks`RealT]]], "softmax/1" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{21, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{63, 63, 21}, 
                    NeuralNetworks`RealT]]], "softmax/2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{63, 63, 21}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{63, 63, 21}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{63, 63, 21}, 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"250\"", "\"250\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"250\"", "\"250\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"250\"", "\"250\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"125\"", "\"125\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"125\"", "\"125\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"125\"", "\"125\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "12", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "12", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv6a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv6a_relu\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"21\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax/1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["TransposeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"63\"", 
                    "\"63\"", "\"21\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax/2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"63\"", 
                    "\"63\"", "\"21\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"63\"", 
                    "\"63\"", "\"21\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[52]=",ExpressionUUID->"34834fed-adbf-4be0-b013-82a6ccb2fd28"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resize the layers", "Subsection",ExpressionUUID->"b4803689-f318-4d0a-8cf6-7abd4a561cb4"],

Cell["Drop the last three layer to modify it:", "CodeText",ExpressionUUID->"b91a2fe4-fd0e-4eae-94ab-0cf7ecce3c14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"firstPartNet", "=", 
  RowBox[{"NetDrop", "[", 
   RowBox[{"netModel500", ",", 
    RowBox[{"-", "3"}]}], "]"}]}]], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"3ead8a7b-64dc-4ce6-9091-0c24ec492c7c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"63\"", 
                    "\"63\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["22", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 3, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 3, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{64}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    64, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 64, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    64, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 64, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    128, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 128, "$InputSize" -> {250, 250}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    256, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 256, "$InputSize" -> {125, 125}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {4, 4}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 512, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.3, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{4096, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4096, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 2048, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 2048, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {4, 4}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 1024, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{4096, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4096, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 2048, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 4096, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"250\"", "\"250\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"250\"", "\"250\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"250\"", "\"250\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"125\"", "\"125\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"125\"", "\"125\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"125\"", "\"125\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "8", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5b1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5b1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5b2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "7", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5b2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "12", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "12", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv6a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv6a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv6a_relu\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv6a_relu"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[53]=",ExpressionUUID->"76a6fe66-0957-4c37-9094-f6f092b35711"]
}, Open  ]],

Cell["Add a convolution layer which returns two classes 0 or 1:", "CodeText",ExpressionUUID->"cd0d3ff6-bc54-4114-81a1-a4b518a70ebc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convLayer", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{"{", 
    RowBox[{"firstPartNet", ",", 
     RowBox[{"ConvolutionLayer", "[", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], ",", 
       RowBox[{"\"\<Stride\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], ",", 
       RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"12", ",", "12"}], "}"}]}], ",", 
       RowBox[{"\"\<Dilation\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"12", ",", "12"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"ResizeLayer", "[", 
      RowBox[{"{", 
       RowBox[{"500", ",", "500"}], "}"}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"1ac40f1d-b38b-4092-b87c-61fa477fbfe0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"500\"", 
                    "\"500\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 3, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 3, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    4096, 3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{2, 512, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "22", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ResizeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[54]=",ExpressionUUID->"a7bb54fb-bfed-4e2f-9121-9fbb713511fc"]
}, Open  ]],

Cell["Take the last two layers from the one with the new encoder:", "CodeText",ExpressionUUID->"ff3a3785-e83c-428d-b2a5-0e79343461d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lastPartNet", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{
    RowBox[{"NetTake", "[", 
     RowBox[{"netModel500", ",", 
      RowBox[{"-", "2"}]}], "]"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellLabel->"In[55]:=",ExpressionUUID->"4d5bf403-48a8-44e3-91ea-3fc8ead1407b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "softmax/1" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "softmax/2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax/2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"tensor\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax/1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["TransposeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"tensor\"", 
                    Annotation[#, {"Nodes", "softmax/1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax/2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"tensor\"", 
                    Annotation[#, {"Nodes", "softmax/2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"tensor\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[55]=",ExpressionUUID->"d17873b7-5d0b-4dae-bb73-03b0196e17db"]
}, Open  ]],

Cell["\<\
Append the last layers and Softmax Layer with a net decoder of classes:\
\>", "CodeText",ExpressionUUID->"cc0975d9-3335-44d8-bd8a-d819ae4f3ed5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finalNet", "=", 
  RowBox[{"NetAppend", "[", 
   RowBox[{"convLayer", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "lastPartNet", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"\"\<InputDepth\>\"", "\[Rule]", "3"}]}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"181b5c3b-7ec8-461b-9fb7-4e9e0673e497"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 3, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 3, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3b1_plus", "Inputs", "1"]
                     -> NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    4096, 3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{2, 512, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 3, "Dimensions" -> 2, 
                    "$Rank" -> 2], 
                    
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "22", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ResizeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["TransposeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {261., {54.9169921875, 60.0830078125}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[56]=",ExpressionUUID->"bb8eb00d-f5fb-4b4a-984e-b1d53145121e"]
}, Open  ]],

Cell["Initialize the final net:", "CodeText",ExpressionUUID->"e5c223ff-ee13-4e34-922a-6ffee660145e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iniFinalNet", "=", 
  RowBox[{"NetInitialize", "[", "finalNet", "]"}]}]], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"a01fab52-10fa-4a9d-a938-8719631622e9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 3, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 3, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    4096, 3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 3, "Dimensions" -> 2, 
                    "$Rank" -> 2], 
                    
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart = {
                    "Outputs", "Output"}, 
                   NeuralNetworks`Private`NetChain`part = {
                    "Outputs", "Output"}, 
                   NeuralNetworks`Private`NetChain`selected = 
                   NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 3, "Dimensions" -> 2, 
                    "$Rank" -> 2], 
                    
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "22", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ResizeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["TransposeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {261., {101.9169921875, 107.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[57]=",ExpressionUUID->"31b6bf11-d15a-4968-8e69-88308b3efce0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"iniFinalNet", "[", 
   RowBox[{
    RowBox[{"Keys", "[", "fileImported", "]"}], "\[LeftDoubleBracket]", 
    "rand", "\[RightDoubleBracket]"}], "]"}], "//", "Image"}]], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"6e6a478e-561c-4e52-981a-5aab227b07ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loss", "Section",ExpressionUUID->"ef3d612d-8d12-4265-bca9-c2d57a6ccfa6"],

Cell["Connect the final net to a loss function:", "CodeText",ExpressionUUID->"804b7a98-15e4-479a-ab71-095ea70740eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LossNet", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<eval\>\"", "\[Rule]", "finalNet"}], ",", 
      RowBox[{"\"\<loss\>\"", "\[Rule]", 
       RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}]}], 
     "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<eval\>\"", "\[Rule]", "\"\<loss\>\""}], "}"}]}], " ", 
   "]"}]}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"b08e2096-d14d-4c2a-9ba9-6b99b3cb8f5b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0., BaseStyle -> 
                    GrayLevel[0.4]], {-2., 1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"eval\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["eval", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[5]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"CE\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CrossEntropyLossLayer", "[", 
                    RowBox[{"\"Index\"", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"Target\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500", ",", 
                    RowBox[{"Restricted", "[", 
                    RowBox[{"\"Integer\"", ",", "2"}], "]"}]}], "}"}]}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    HoldForm[
                    CrossEntropyLossLayer[
                    "Index", "Input" -> {500, 500, 2}, 
                    "Target" -> {500, 500, 
                    Restricted["Integer", 2]}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"eval\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"500\"", 
                    "\"500\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"500\"", "\"500\"", 
                    "\"2\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"500\"", "\"500\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 
                    1.}, {-2., 1.0000000000000002`}, {6.123233995736766*^-17, 
                    1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 102.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "eval"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Target" -> 
                    NeuralNetworks`TensorT[{500, 500}, 
                    NeuralNetworks`IndexIntegerT[2]]], 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "eval" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["conv1a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 3, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 3, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {500, 500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["conv1a" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2a_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2b1_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2b2_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3a_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3b1_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3b2_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4a_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b1_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b2_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b3_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b4_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b5_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5a_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5b1_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5b2_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["6a_plus" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    4096}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 4096, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{2, 512, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 2, "KernelSize" -> {3, 3},
                     "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "loss" -> 
                    Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "TargetForm" -> "Index", "$InputDimensions" -> {500, 500},
                     "$Classes" -> 2], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{500, 500}, 
                    NeuralNetworks`IndexIntegerT[2]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "\" of \"", 
                    TemplateBox[{"\"indices\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "2"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"bda4c0e1-fad8-48f0-a2a6-0227359669fa"]
}, Open  ]],

Cell["Initialize the LossNet:", "CodeText",ExpressionUUID->"91fe5b57-90e3-4097-bf89-3be6419d21cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iniLossNet", "=", 
  RowBox[{"NetInitialize", "[", "LossNet", "]"}]}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"32cdd7e4-3f77-4d2c-ae13-55f99770c0bc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"eval\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["eval", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[5]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"CE\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CrossEntropyLossLayer", "[", 
                    RowBox[{"\"Index\"", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"Target\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500", ",", 
                    RowBox[{"Restricted", "[", 
                    RowBox[{"\"Integer\"", ",", "2"}], "]"}]}], "}"}]}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    HoldForm[
                    CrossEntropyLossLayer[
                    "Index", "Input" -> {500, 500, 2}, 
                    "Target" -> {500, 500, 
                    Restricted["Integer", 2]}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"eval\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"500\"", 
                    "\"500\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"500\"", "\"500\"", 
                    "\"2\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"500\"", "\"500\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 
                    1.}, {-2., 1.0000000000000002`}, {6.123233995736766*^-17, 
                    1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 102.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "eval"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Target" -> 
                    NeuralNetworks`TensorT[{500, 500}, 
                    NeuralNetworks`IndexIntegerT[2]]], 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "eval" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["conv1a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 3, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 3, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {500, 500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["conv1a" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2a_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2b1_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2b2_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3a_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3b1_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3b2_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4a_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b1_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b2_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b3_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b4_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b5_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> N\
euralNetworks`NetPath["Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5a_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5b1_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5b2_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["6a_plus" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    4096}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 4096, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 2, "KernelSize" -> {3, 3},
                     "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "loss" -> 
                    Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "TargetForm" -> "Index", "$InputDimensions" -> {500, 500},
                     "$Classes" -> 2], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{500, 500}, 
                    NeuralNetworks`IndexIntegerT[2]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "\" of \"", 
                    TemplateBox[{"\"indices\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "2"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"58b329d0-0a85-4393-93e6-1beb1c2d45ec"]
}, Open  ]],

Cell["Export the complete net to train:", "CodeText",ExpressionUUID->"72dab291-480d-4eaa-b652-0dbdd14d2dbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/enricocastro/Desktop/net.wlnet\>\"", ",", "iniLossNet"}], 
  "]"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"e4502c17-f471-4b32-b244-057fcf519cc3"],

Cell[BoxData["\<\"/Users/enricocastro/Desktop/net.wlnet\"\>"], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"f04e4332-dab4-443b-9f4a-f8a37d73afbb"]
}, Open  ]],

Cell["Test the LossNet:", "CodeText",ExpressionUUID->"18b07605-307f-40be-9488-3978231d024e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iniLossNet", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
     RowBox[{"fileImported", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"\"\<Target\>\"", "\[Rule]", " ", 
     RowBox[{"fileImported", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "|>"}], 
  "]"}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"a011fe51-7d3a-4371-87a3-72592ae86bec"],

Cell[BoxData["0.8729822039604187`"], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"c5acb2ab-7d36-44b2-ab79-5e134b09ef0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iniLossNet", "[", 
  RowBox[{
  "fileImported", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"f976eb43-1c88-4b76-b85e-62091816cdd6"],

Cell[BoxData["0.8729822039604187`"], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"d281157b-d328-4ac9-bce6-c0f85b2e38a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generator function", "Chapter",ExpressionUUID->"afabc96c-6480-4a5c-8a91-b0edb93c2964"],

Cell[CellGroupData[{

Cell["Fix Data", "Subchapter",ExpressionUUID->"16ca443a-0b40-4c5d-afe0-190bc837914a"],

Cell["Set the file path for the MX files:", "CodeText",ExpressionUUID->"34bff1df-7be4-489a-8749-164b0301e15d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "path", "=", 
   "\"\</Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mxFiles", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"path", "<>", "\"\<*.mx\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomSample", "[", 
   RowBox[{"mxFiles", ",", "1"}], "]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]}], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"5c699b60-1ec7-47d8-aeab-38743840c580"],

Cell[BoxData["\<\"/Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/\
File123.mx\"\>"], "Output",
 CellLabel->"Out[76]=",ExpressionUUID->"11600d36-12f7-4f89-bf27-d2f98b1ca4a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Binary Files", "Section",ExpressionUUID->"74164fd8-f240-4d80-b54c-a9b13c251c17"],

Cell[CellGroupData[{

Cell["Binary write", "Subsection",ExpressionUUID->"d8596816-a0bd-49e7-9b86-323df97d9a18"],

Cell["Binary write:", "CodeText",ExpressionUUID->"45526cc8-a93b-47ba-a939-aba5dd6709a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"binaryWrite", "[", 
   RowBox[{"file_", ",", "expr_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"bytes", "=", 
      RowBox[{"BinaryWrite", "[", 
       RowBox[{"file", ",", 
        RowBox[{"BinarySerialize", "[", "expr", "]"}]}], "]"}]}], "}"}], ",", 
    
    RowBox[{
     RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
     "bytes"}]}], "]"}]}]], "Code",
 CellLabel->"In[45]:=",ExpressionUUID->"07fcbf73-3fe3-413c-b395-d89092e54542"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import and Reexport Function", "Subsection",ExpressionUUID->"28ca32e5-eb2c-41ea-ba0b-162aa962bac0"],

Cell["Function to convert TIF images to JPG and matrix to Binary:", "CodeText",ExpressionUUID->"0db7d084-3db1-49d3-b1fe-9d756b910e36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"importAndReExport", "[", 
   RowBox[{"path_", ",", "folder_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imported", ",", "imgs", ",", "masks", ",", "hashes"}], "}"}], 
    ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"imported", "=", 
      RowBox[{"Import", "[", "path", "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"imgs", "=", 
      RowBox[{"imported", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\t", 
     RowBox[{"masks", "=", 
      RowBox[{"imported", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\t", 
     RowBox[{"hashes", "=", 
      RowBox[{"Hash", "/@", "imgs"}]}], ";", "\[IndentingNewLine]", "\t", 
     "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"folder", "<>", "\"\</\>\"", "<>", 
              RowBox[{"ToString", "[", "#1", "]"}], "<>", "\"\<.jpg\>\""}], 
             ",", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"hashes", ",", "imgs"}], "}"}]}], "]"}], ";"}], "//", 
       "AbsoluteTiming"}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"binaryWrite", "[", 
            RowBox[{
             RowBox[{"folder", "<>", "\"\</\>\"", "<>", 
              RowBox[{"ToString", "[", "#1", "]"}], "<>", "\"\<.bin\>\""}], 
             ",", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"hashes", ",", "masks"}], "}"}]}], "]"}], ";"}], "//", 
       "AbsoluteTiming"}], "]"}], ";", "\[IndentingNewLine]", "\t", "\n", 
     "\t", 
     RowBox[{"Clear", "[", 
      RowBox[{"imported", ",", "imgs", ",", "masks", ",", "hashes"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Code",ExpressionUUID->\
"fa2c85d2-5978-4a72-9f05-bdf743d1c6d9"],

Cell["\<\
Take each MX file and create the correspondent JPG and BIN file:\
\>", "CodeText",ExpressionUUID->"dc327f98-688c-42bd-b939-a6806b04aab4"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"importAndReExport", "[", 
    RowBox[{
     RowBox[{
     "mxFiles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
     "\"\<binFiles\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "mxFiles", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"5a8e8a38-5b33-47ea-9ca6-b6ca6b0b6db9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Binary Read", "Subsection",ExpressionUUID->"8fdb7428-2d2e-42dd-b436-992c65c60038"],

Cell["Read the binary file and Deserialize the file:", "CodeText",ExpressionUUID->"d19e1440-db9d-4bd2-a6e9-62f42e046d25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"binaryRead", "[", "file_", "]"}], ":=", 
  RowBox[{"ReadByteArray", "[", "file", "]"}]}]], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"cec4f03f-993d-4c71-930b-388c72c17136"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "binaryRead", "[", 
   "\"\</Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/binFiles/\
712275997646377.bin\>\"", "]"}], "//", "Dimensions"}]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"30722d1c-3f3e-440f-b290-fe979ca0dd32"],

Cell[BoxData[
 RowBox[{"{", "250009", "}"}]], "Output",
 CellLabel->"Out[78]=",ExpressionUUID->"e440f39b-8635-472a-85d1-6c11f5f1a2b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "FileNames", "[", 
   "\"\</Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/binFiles/*.\
bin\>\"", "]"}], "//", "Length"}]], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"660cb822-1de4-4849-913b-5769b077397e"],

Cell[BoxData["18000"], "Output",
 CellLabel->"Out[81]=",ExpressionUUID->"26284c11-5a80-4fe9-bb45-46650b738367"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training Out of Core", "Chapter",ExpressionUUID->"8fe39e5a-780a-4b9a-9576-c1c4fea5b1a4"],

Cell[CellGroupData[{

Cell["Partitional Function", "Section",ExpressionUUID->"1fb6bce5-f8ed-4535-997f-4218267cba81"],

Cell[CellGroupData[{

Cell["Data imported", "Subsection",ExpressionUUID->"4e56395e-8fb4-4a1d-97c3-d9beff1bfbc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingDataSet", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "FileNames", "[", 
      "\"\</Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/binFiles/*\
.jpg\>\"", "]"}], ",", " ", 
     RowBox[{
     "FileNames", "[", 
      "\"\</Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/binFiles/*\
.bin\>\"", "]"}]}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"7309f90f-f9cb-4957-81eb-70d75e448e0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imageDataSet", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"File", "[", 
      RowBox[{"trainingDataSet", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"b87732a6-bd50-41f9-b2a4-e1ee4f7a45bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imageDataSet", "//", "ByteCount"}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"ae5119ce-329d-4ecd-8533-431cbbe44757"],

Cell[BoxData["1800"], "Output",
 CellLabel->"Out[86]=",ExpressionUUID->"cacd4a07-8677-4f2d-b8e5-836bf40de510"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imageDataSet", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"0b2858d3-f15a-4e8e-8f7d-b5b2115dce70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"File", "[", 
    TemplateBox[{
     "\"/Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/binFiles/\
1000056342836973542.jpg\""},
     "FileArgument"], "]"}], ",", 
   RowBox[{"File", "[", 
    TemplateBox[{
     "\"/Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/binFiles/\
1001229330344748832.jpg\""},
     "FileArgument"], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[87]=",ExpressionUUID->"ecf38887-3c17-4e65-bf5e-10cf6649c689"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"maskDataSet", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReadByteArray", "[", 
      RowBox[{"trainingDataSet", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"d19636d2-a03f-4769-ae38-270cb60d5595"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maskDataSet", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"35891db0-7420-4051-91ae-a2083001de0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["ByteArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"250.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"250.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ByteArray[CompressedData["
1:eJzt3NFtFDEYRtFZthK6QJRBCWmAeiiHDigmBfAKUhQpI9szzj2ngv/z1Ur7
NF9ffv54eRzH8evP8/j2/ffx5fX5+nzMcMwz5d4BJk4ebrcHmHLvABMnD7fd
/AkHjzB39FjbDR968Dgrpo+y3fChB4+zYvoo2w0fevA4K6aPst3woQcPtGL7
INvtHnrwXUfOtd1z3P2+DYzK7U33oXmP5j2a92jeo3mP5j2a92jeo3mPZj2K
92jeo3mP5j3+wvVo3qN5j+Y9mvdo3qN5j+Y9mvdoDlDyOO/q0zlJ8yDNezQP
0rxH8yDNP6XTv2XNt6V5j+Y9mvdo3qN5j+Y9mvdo3qN5j+Y9mvdo3qN5j+Y9
mvdo3qN5j+Y9mvdo3qN5j+Y9mvdo3qP5JzYlrua3pnmP5j2a92jecyKP5ns7
k0fz+xudR/P707xnZfNVm3if5j2aBw1uzgY079G8R/MezTtOtNZ8c5r3aN6j
eY/mPZr3aN6jeY/mPZr3aN6jeY/mPZr3aN6jeY/mXZr3aN7zXkLNezTv0bxH
8yDNezTv0bxH8x7NezTv0bxH8x7NezTv0bxH8x7NezTv0bxL7SLJAQAAAAAA
AAAAAAAAAAAAAAAAAAAASHv709wfdvUM3jCoreYb0bxH8x7NezTv0bxH8x7N
ezSvmVxc8xvSPGd6cs1vR/MezXs079G8R/MezXs0T9K8R/MezXs079G8R/Me
zXvEBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPiwxxlXH83/TkXUfGua
92jeo3mP5j2a92jeo3mP5j2a92jeo3mP5j2a92jeo3mP5j2a92jeo3mP5j2a
92jeo3mP5j0rmot+L5r3aN6jeY/mPZr3aB6keY/mPZr3aN6jeY/mPZr3aN6j
ec+K5srfi+Y9mvdo3qN5j+Y965pLfxea9yxvLvrlNO/RvEfzHs17NO/RvEfz
nvXNRb+a5j2a92jeo3mP5j2a91zQXPSLad6jeY/mPZr3aN6jeZbmPUubi34L
mvdo3qN5j+Y9mvdo3qN5j+Y9mvdo3iN5j+Y9mvdo3qN5j+Y9kvdo3qN5j+Y9
mvdo3iN5j+Y9mvdo3qN5j+Y9kvf8G0TzHs17NO/RvEfzHsl7NO/RvEfzHpUB
AAAAAAAAAAAAAAAAAAAAAAAAlvsLsqdf8Q==
     "]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["ByteArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"250.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"250.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ByteArray[CompressedData["
1:eJztnOuRLkcRRHeRJXhBYAYmyAHswRw8wBgMgABJ+5rurqzK7K75Js8fFNqe
qlOZkuLqhoI///r3v/36/vb29o9//fL2l7/+8+1P//7l37+8mefw/n9Oa5iN
uPPn4c6fhzs3xhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHG
GGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHG
GGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHG
GGOMMcYYY4wxxhhjzJj3/3LawWzl/f2j9M9/bF6W9089v7+79LvyHuLrw+vP
Tl9iomQ6H74xt8Cd04hFiXNINPKQrtaGYmdVDt0TeUhXa0OxsyqH7ok8pKu1
odhZlUP3RB7S1dpQ7KzKoXsiD/ML6EeRiWUk49A9kYf5kOhHkQHPYXPonsjD
fEj0o8iA57A5dE/kYT4k+lFkwHPYHDoo8i4fEv8oiKUGeA4b3cWrtYja8aOG
l87vn3x4EE0SkbWI2vGjhpfO7598eBBNEpG1iNrxo8aXrk8ffHgOURKBtYja
8aOmly40xx8eQpfEai2idvyo6aULzfGHh9AlsVqLqB0/anrpQnP84SF0SazW
ImrHj5peutAcf3gIXRKrtYja8aOmly40xx8eQpfEai1icv6qmdVCs34OGV0S
zLXnr5pZLTTr55DRJcFce/6qmdVCs34OGV0SzLXnr5pZLTTr55DRJcFUOH/V
zGrhWT+HjC4JpsL5q2ZWC8/6OWR0STAVzl81s1p41s8ho0uCqXD+qpnVwrN+
DhldEkyF81fNrBae9XPI6JJgKpy/ama18KyfQ0aXBFPh/FUzq4XnHpmjuHN3
7s5fH7jzQCjuvDfu3J2LO7/8sfrGr1YLzz0yR3HnFBk8xllCYhRSi4/ZZwYH
/NxGzByPcZaQGIXHYhL5zOiEn9uImYdiDJHbL5Clzbz8MeEAwGrhWbFgkNsv
kKXNvPwxwz/zkph5LMYIuf0CWdrMyx9z9KNPF55ljyK5/QJZ2szLH5Psg28X
ngSRKjkFtixt5uWPWfKxxwtPikmNnIJGljBz/GOGe+j1wjPhMRqVJaegkSXM
HP+Yoh55vvDEPYajsuQUNLKEmeMfc8wD7/MTUJksOQWNLGHm+Mck9fXz9ADY
JUtOQSNLmDn+Mct9+Tr7Pa6SJaegkSXMHP+YJr96nPw8YZIlp6CRJewYryTa
z98uvk55vG7nWZlvE5izgUk/fyz2SJNTEMnWd4xX0vxXL2ffpj2gGFfkFESy
9R3jlbQDVg8nn+Y9oBjn5ARksvUd45WsC5bvhl9WPKAY5+QEZLL1HeOVpBPW
zwYf1jygGOfkBGSy9R3jlZwbAq8uv6t6QDHOyQnIZOs7xispR0QeXXpVPaAY
5+QEZLL1HeOVjDNCFpdeVQ8oxjk5AZlsfcd4JeGOmMWlV9UDinFOTkAmW98x
Xlk/JGhx6VX1OFkhzI7OVys5Y6NrJyJNO2Lz6M73LG7Hxq6HK7njzYr9lbvz
07jz5xHpnFyNO5+xIQ+gc1Y/z+58499cBYUend/yrww0XXf+7SvC6iqotTsf
rYx+RNidJRkFXDcrY6qVYmX4G8LyJMko0HT3nHnAJzFzVxpLgag2Gis7Y/gY
sQ8+c18ca4OYCxorO2P4GLEPPHNnHgGFkAqa684bD/igM/cGEnEImKC57jzx
gA84cnciIYmlCJrrzhMP6GAjtycStHDnhZW4H8EBBdZAc9154AEdZOCRTIIe
8Ac7Q2a6sVfm7Epry86ROWiu7JCZbuSVWbnK2qpzaA6aKztkpht5ZV4uv7bq
HJqD5soOmekm1onb5WexRLLmx0NuphPWK4xieeTEG4TcTCfqVxnE0sh4twi5
k8tXsZlgYlztClgCynVzvC2l3j7/p4AUj+oVcBrnExzTtPPP68iV7+m8Mz07
/7qPW/n+39DpRsvOvy+kVt7mXz2O5dzJ5cLp55+qzbtH52JFiUrN//LrQhx7
A12upyatN0oNLRp9+9PoNMovAUtACW+RlIhU7IdLk1GEr5jb5tOAEs6mBiER
qdiPt6aSGF4BnphPA0o4mxqERKRgP9vLqXze+fyfApnDgHzTqWFIRPL25AQm
w8Ab81LRcDkX041SQyk2+GHjcfNV8VHVm6bkDhYYpYZyZBKnzf+hAS7KK61j
Zd0bRSKStCeHMB8A7iGFEQW/FkBiktMnx7D4HlxDCiMIeiuGREWRTfmw4Lqw
HekuwqkoEpnMR+QclhPARaQwIqCnwkhscidQc1iOADeRwlgDX4oj8UkeQQxi
PQNcRQpjDXwqjsQnewQth8AQcBcpjDXwrTg5o4Vs+ghSDJEpiwvXI2s3DYGP
xckZLWTzR1BSCIW5uHA9s2YzBL4WJ2e0kC0cQQghFubiQp7XOExkP5Oc0UK2
ckQ5hGCYwWfj51UfbD+TnNFCtnREMYNomMFn4+eoWB8m/U4SWYRVy6b09VJ9
9TA8F76rDbOCx4kAYdWciOcEX5Ju6EzHzj/mM69h+t2bnp2/8Stv0nk846MO
Jzp/o1fuzhGHI52/8f7F/NoPSxx6nHdUBJlyuPA5oroCixJLHHpckNwSZMDh
wueI6gosSixx6HFBckuQAYcLnyOqS6AoscShx3nHPUEGHC58jqiuQaLEEoce
Zw13BRmR+OlzRDUAEiWUOPQ4IIOI0sn5pFXVBwFRQolHhwZdpnCS4IlNvgpu
E94yMrv2gxKPDo2pzOEEwRObfBVdJrghdM+lTPSM6NDINytKWUTI+eQERTd9
nglECSWe6QeMNjTzboiO+jwTiRJKPNMP3rYinqOIrvo8E4oSSjzTD1R0cOa9
EN31eSQWJZR4pp9gxdDMWyE6rBAllHamH8AtPPNOiC7bFmVmKN42MZnzqE7b
FmViKFo1NZgGiG7bF2ViKFY0NZcOiI7bGCVr6GM6F12HVd6j86cg6gGsXPMX
WG3oyyIqAq3cne+jS+XEzmuTXp82lbupXfSpvEvntxHNIjouU3mXKG8jmqRT
5eHfTE9rjdUw+ZLAaUSnxSpOpy84GbMvCaQdYRKzzygHBqXFxjMx/ZJAVhEH
n33IOTAobzaciemXBLKKOPDwU9KBORW1x3cO/Deo26wDcwRqmHxJIKuIA44/
px0YIzDD3EsCWUWcfASbvdV2aTGWwB7FqabqJoooeozQi7V/k+JcU3RSQvHn
cvgYhRd3/ybFhabkIo4hfoxAjLt/k+JKU3AQSTBxjMqPu18oF9VkH8TySx2j
EeTuF8qFNbn30PRyx0gMufuFcnFN5jk8veQxEkXqfqEcoMm7hmiXPUbhSN0v
lEM0Wccw5dLHCCSp+4VykGavX7LPZh1w5O6X2u3SrAjjww5IcvdL7XZpFnwT
0w5YcvdL7XZp5nXhcQ1uOC5AiLbqWLBVeiU5LptveZvux/RWWvelf4Yfi105
B2WIlBo+vrt55X28lSky7gH9dkYH0kdcGSPhHlBva3QgfcSVMYomNEkOpY+5
MkfRhB7BwfRRVwZZngDK7cwNp4+7MsnqBNAttaZ6o+QIrkFVqT5bppbbEv82
uUZqn0NpU5uQCQvXjH+c3SPVT6G0KU1IRJWxjH+dXaT1z6C0qUxIJMWSBIxE
l0AH4OyNMzwhEVQysfD32VXyC2CUNpUJiaRygYUHZHfpT0CR2lQmJKJK5RWe
kF224QYQqU1pQiKrTFzhEdltO47AkNoUJyTScud8o/pwoVwqrfCM7Dr8iEd3
DueF6Q1WkI9Bb8idgSC10UzgZhWekl2InZC+A0BqQ7hHHlV4THYjckHlkDhS
G8Y96qTCc7Ir4wcULwkjtalN+O2tOKjwIOLOw0QTTR1ZmvDHY4XZzFFxTCui
ZaeOrIz49JgvNnUEjklvPUqw69yRhRFfXrO95o7AMfm1Jwl2nTsyP+Lbe65W
DneeHw5/uNbEz340LTu/+sKV0+jY+fUn7pxFw85H3ygqf+RfRP06H38kKMid
szsnCg1/pthGOKMzd+l8VLpkW/2K1nTrfLGa7ePOz3e+3E3WcefHOw8s59q4
8wOdf5kY2k6Vcee7O/82Mbie6eLOt3b+Y2RcgKfizvd1fjESMaCZuHNe5/hM
7DmrltqVNwUpB0kDnalwSGsyNzQEyBpKA5ypkchqEhd0BApb0/n7wV9Jque3
RJU2NBSUIJYiHt8TVdhwjSKPlCZrelNUWZdbZYlkNEnDu6KKulwqzSShyZnd
FlXS5U55KrgmZXRfVEGXK6WZJDQ5s1Ord1iokgbnwkjPJw3PrN5hoYoanIui
PZ81PbF6h4Uqa3CuSiOnGf6Iv1pxJLw56QHOFVkkNcMvpWnwrqzZqOZqJLKa
4Ze1NfvOLNmo5koc0prhl7U1G++s2KjmKhTymuGntTU7Dy3YqOYKDAqa4ae1
NVsvzduo5vIFKprhp7U1e09N26jm0vdDmvmLoDWHb83aqOay1wtAhfoeq/Io
X7w1Bfgi9H2ra1Ue5Yu3pqCg77Uqj/LFO0OQ0PdclUf54o0ZaOh7r8qjfPG+
CET0PVjlUb54WwIq+l6s8ihfvCsAGX1PVnmUL950v46+N6s8yhfvOV9I36NV
HuWLt1yvpO/VKo/yxTuOl/JFvdXZKo/Mkbtv30iru1UemSM3n76TVoerPDJH
bj59I70OV3mkrtx6+XPp3rnw9OfSu3Ph4Q+mdefCuyea8q2nEZVAKHxH+HvW
djtdpJI4c+/dE809Ww4eLzLJnLnx6qnmni0HzxeJpM7cdfNCc8+WgwGIPHJn
brl4qblny8EERDa5M3ccvNbcs+VgBCKb3Jkb7g1o7tlyMAORTe7MDfcGNPds
OZiByCZ35oZ7A5p7thzMoFDMTKs0dt/vhO1Z3i2ESjUTL9HYHdfv2XIyg1I3
aOcxGep9kYXqsKnJHvLRmamvvdqnT/t8rlWffW563Hk3Nz3uvJubHnfezU2P
O+/mpsedd3PT4867uelx593cXoZmubrzDTTL1Z1voFmy7nwDzaJ15xtolm0r
me3sve+xMbfCnT8Pd/483PnzcOfPw50/j8adyyyeTt/OZRKPp2vnMgXjzh+I
O38e7vyFGcTozl+XUZBdO3fpZYY5uvNXZZJj185depE7du7Wa7jz5+HOn8es
8wMe7nwDXUJ05/voEqI738DvwTUJ0Z3r+UiuR4juXMmP7FqE6M6FXITXIUR3
ruMyvQYhunIZg/zOp+jKVfRN0JWr6JuhOxfROER3LqJxiq5cROMc3bmIjUGi
FcY7d+sQL9K5Swdo2Dn63qXHCPy9xN/pzk/y/vHb6u78GfwRkjt/Cp9Sep3O
XfqMLym58yfwLSZ3/vr8yMmdvzoXQb1G53Tdl+EyqlfonG77MozSunvndNcX
YhhYp84T0F1fh0li7vw1mUbmzl+RRWZAjrnMmSVn9j+QZWjxHHOZEztO7X8e
gdTCOeYy51Wc2/84QrFFc8xlTmv4Wt58I5hbMMdc5qyCB+7mK+HgfvuDRY65
zIkdp/Y/CyC5r/8Tnce0yFEP6bWAgvvj/3YAGcjVyFFN6aXIBXer35P5qm6S
ybnz+5KNzp3flvdk6ff6/fYPb/O/X39nwlNkyK/5h7b5/V+3M+m585vyexqZ
+A5m6M7zfMRxr/xceZovgdwpQVee5VskN8rQlSf5Ecp9UnTlOS5icY6vzWWH
7vyluS7Rnb8woxrd+csy7tGdvyizIt35SzJv8hadx//K7OF7mmU0N8jQnUME
kumfoTtHCAXTPkN3DhDMpXuG7jxOOJfmGbrzMEAs01fHM3TnUaBcpo+OZ+jO
Y4DJTF+cztCdx0Cjmf7cnd8BPJvpT915f1LhtA3OnQdIptM1N3e+Jh1P09jc
+ZJCPj1Tc+crSgG1DM2dL0gEdFX6Mf8L3PmcTOUXpR/zv8KdT8lV/qP0Y/6X
uPMZ2crfv/7uzLkDLnHnEwqVd47ppY4hU6r8QTm9EsXOXfr9qFbu0m9HvXKX
fjMYlfcs/f4XiOBU3jKy2x8gglV5x8zu7i+CV3nD0G6uL4JZeb/U7m0vglt5
u9xuLS+CXnmz3O7sLkJQea/gbqwuQlL5j+T+AzLv6uw=
     "]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"5e15be45-12ab-4cb8-a7e9-4fcea31dac16"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomSample", "@", 
    RowBox[{"Thread", "[", 
     RowBox[{"imageDataSet", "\[Rule]", "maskDataSet"}], "]"}]}]}], 
  ";"}]], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"4ba87484-9a1d-439c-8395-539d93216144"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[91]:=",ExpressionUUID->"64deb36a-412a-4fe7-a56b-7a2122422b7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"File", "[", 
   TemplateBox[{
    "\"/Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/binFiles/\
1001874638719964187.jpg\""},
    "FileArgument"], "]"}], "\[Rule]", 
  InterpretationBox[
   RowBox[{
    TagBox["ByteArray",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
             GridBox[{{
                TagBox["\"250.0 kB\"", "SummaryItem"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             GridBox[{{
                TagBox["\"250.0 kB\"", "SummaryItem"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ByteArray[CompressedData["
1:eJztwQEVgCAQBbCPl4QWPmMYgQLmMQ4NCEMAg7itj+ceLcm7Kuc1c+zaFQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAACAn/sA08oGNw==
    "]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Output",
 CellLabel->"Out[91]=",ExpressionUUID->"f616141d-11a7-45a7-a2e0-e4a22afc2c3d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generator", "Subchapter",ExpressionUUID->"c1136be3-7041-4ccd-a840-3883810ddb5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"partGenerator", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"batch", ",", "dataSet", ",", "batchData"}], "}"}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ValueQ", "[", "partitionedData", "]"}]}], ",", 
         RowBox[{"partitionedData", "=", 
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "data", "]"}], "]"}], ",", "#BatchSize", 
            ",", "#BatchSize", ",", "1"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"Print", "[", 
        RowBox[{"Association", "@", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "#", "]"}], "\[Rule]", 
           RowBox[{"Values", "[", "#", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"batch", "=", 
        RowBox[{"Mod", "[", 
         RowBox[{"#AbsoluteBatch", ",", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"Length", "@", "data"}], "/", "#BatchSize"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"batchData", "=", 
        RowBox[{"data", "\[LeftDoubleBracket]", 
         RowBox[{"partitionedData", "[", 
          RowBox[{"[", 
           RowBox[{"Echo", "@", 
            RowBox[{"(", 
             RowBox[{"batch", "+", "1"}], ")"}]}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t", "\n", 
       "\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "batchData", "]"}], "\[Rule]", 
         RowBox[{"1", "+", 
          RowBox[{"BinaryDeserialize", "/@", 
           RowBox[{"Values", "[", "batchData", "]"}]}]}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Input\>\"", "\[Rule]", 
         RowBox[{"Keys", "[", "batchData", "]"}]}], ",", 
        RowBox[{"\"\<Target\>\"", "\[Rule]", 
         RowBox[{"BinaryDeserialize", "/@", 
          RowBox[{"Values", "[", "batchData", "]"}]}]}]}], "|>"}], "*)"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Code",
 CellLabel->"In[92]:=",ExpressionUUID->"33679b83-e63c-4b65-b479-3fb8f307a121"],

Cell[BoxData[
 RowBox[{"Clear", "[", "partitionedData", "]"}]], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"6af23282-5c1c-407b-9d82-8fc7d1527df3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partGeneratorData", "=", 
  RowBox[{"partGenerator", "[", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<BatchSize\>\"", "\[Rule]", "2"}], ",", 
     RowBox[{"\"\<Round\>\"", "\[Rule]", "0"}], ",", 
     RowBox[{"\"\<AbsoluteBatch\>\"", "\[Rule]", "0"}]}], 
    "\[RightAssociation]"}], "]"}]}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"8c97bd56-df12-4e70-9dd4-d0ef39c8a07f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BatchSize\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Round\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"AbsoluteBatch\"\>", "\[Rule]", "0"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"3c25f8d2-0838-4a59-97b3-c43ddf68b197"],

Cell[BoxData["1"], "Echo",ExpressionUUID->"d8cc3b84-e0e6-4211-bf35-cf3ba74c836a"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"File", "[", 
             
             TemplateBox[{
              "\"/Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/\
binFiles/1001229330344748832.jpg\""},
              "FileArgument"], "]"}], "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
           RowBox[{
            RowBox[{"File", "[", 
             
             TemplateBox[{
              "\"/Volumes/ECG/ProjectWSS/AerialImageDataset/train/MXFiles/\
binFiles/1001874638719964187.jpg\""},
              "FileArgument"], "]"}], "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 27404726380503819855, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 27404726380503819855, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 27404726380503819855, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[27404726380503819855 === $SessionID, 
   Out[94], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[94]=",ExpressionUUID->"a2aa07dc-6051-4055-b430-a18c9fa82175"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"partGeneratorData", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "//", "Flatten"}], "//",
   "DeleteDuplicates"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"d78b7116-912a-4b17-84bb-20c58dd89ca8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"1b81fff7-9fab-4485-8a4b-1d13954c8c73"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsection",ExpressionUUID->"01a2f2bb-34f5-48e0-bb3c-6f30e35a6e6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "partitionedData", "]"}], ";"}]], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"26a6bb4f-3c27-432f-a0fd-e8acea9cb348"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iniLossNet", "=", 
  RowBox[{
  "Import", "[", 
   "\"\</Volumes/ECG/ProjectWSS/AerialImageDataset/IniLossNet.wlnet\>\"", 
   "]"}]}]], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"24500fb0-7105-4e81-9d3e-2e10b967730f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.3999999999999999, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-2., 1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"eval\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["eval", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[5]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox["\"CE\"", 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CrossEntropyLossLayer", "[", 
                    RowBox[{"\"Index\"", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"Target\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "500", ",", 
                    RowBox[{"Restricted", "[", 
                    RowBox[{"\"Integer\"", ",", "2"}], "]"}]}], "}"}]}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    HoldForm[
                    CrossEntropyLossLayer[
                    "Index", "Input" -> {500, 500, 2}, 
                    "Target" -> {500, 500, 
                    Restricted["Integer", 2]}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., 1.0000000000000002`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox["\"eval\"", 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"loss\"", 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Target\"", 
                    Offset[{0, -7}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Loss\"", 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"500\"", 
                    "\"500\""}, "RowWithSeparators"], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"500\"", "\"500\"", 
                    "\"2\""}, "RowWithSeparators"], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"500\"", "\"500\""}, 
                    "RowWithSeparators"], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, StripOnInput -> False, FontSize -> 
                    8, FontWeight -> "Thin", FontColor -> GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 
                    1.}, {-2., 1.0000000000000002`}, {6.123233995736766*^-17, 
                    1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageSize -> {221., 102.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "eval"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Target" -> 
                    NeuralNetworks`TensorT[{500, 500}, 
                    NeuralNetworks`IndexIntegerT[2]]], 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "eval" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["conv1a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 3, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 3, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {500, 500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["conv1a" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 500, 
                    500}, NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2a_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2b1_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{128, 250, 250},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["2b2_plus" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    128}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 250, 
                    250}, NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3a_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3b1_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{256, 125, 125},
                     NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["3b2_plus" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    256}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 125, 
                    125}, NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4a_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b1_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b2_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b3_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b4_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["4b5_plus" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5a_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5b1_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["5b2_plus" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyRawArray[{
                    512}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["6a_plus" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{2048, 63, 
                    63}, NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4096, 63, 
                    63}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    4096}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 4096, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 2, "KernelSize" -> {3, 3},
                     "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "loss" -> 
                    Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "TargetForm" -> "Index", "$InputDimensions" -> {500, 500},
                     "$Classes" -> 2], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{500, 500}, 
                    NeuralNetworks`IndexIntegerT[2]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "\" of \"", 
                    TemplateBox[{"\"indices\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "2"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {353., {20.1669921875, 25.3330078125}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[97]=",ExpressionUUID->"b1d4b0c2-3280-4e2f-9096-2971d3d8b306"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkpointDir", "=", 
  "\"\</Volumes/ECG/ProjectWSS/AerialImageDataset/checkpoint\>\""}]], "Input",\

 CellLabel->"In[98]:=",ExpressionUUID->"be30aa53-bc37-473e-8adf-89fddce296b0"],

Cell[BoxData["\<\"/Volumes/ECG/ProjectWSS/AerialImageDataset/checkpoint\"\>"],\
 "Output",
 CellLabel->"Out[98]=",ExpressionUUID->"ecc6e1d4-c9c5-4279-8a0e-81f94af08c6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iniLossTrainNet", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"iniLossNet", ",", 
    RowBox[{"{", 
     RowBox[{"partGenerator", ",", 
      RowBox[{"\"\<RoundLength\>\"", "\[Rule]", "5"}]}], "}"}], ",", "All", 
    ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "3"}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "checkpointDir"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"6b926bc7-e768-4ee6-9096-8cdd624582dc"],

Cell[BoxData[
 TemplateBox[{
  "NetTrain","netmem2",
   "\"Insufficient memory to evaluate the network: at least \\!\\(\\*RowBox[{\
\\\"\\\\\\\"3.21 giga\\\\\\\"\\\"}]\\)bytes are required but only \
\\!\\(\\*RowBox[{\\\"\\\\\\\"2.41 giga\\\\\\\"\\\"}]\\)bytes are available \
for TargetDevice -> \\!\\(\\*RowBox[{\\\"\\\\\\\"CPU\\\\\\\"\\\"}]\\).\"",2,
   99,7,27404726380503819855,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"a0399feb-4f6e-4701-8f22-8cde3ca0ab84"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[99]=",ExpressionUUID->"97819b36-4fee-4e0c-8344-8197c6725030"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"iniLossTrainNet", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    "\"\<eval\>\""}], "]"}]}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"3c9e7840-6fa6-4a24-81d7-302d95b7b660"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"500\"", 
                    "\"500\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"500\"", "\"500\"", 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 3, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 3, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    4096, 3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "22", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ResizeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["TransposeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"b6088aa0-3e16-4a4c-9720-1c44fcc9406d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"enc", "=", 
   RowBox[{"NetEncoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Image\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"500", ",", "500"}], "}"}], ",", 
      RowBox[{"\"\<MeanImage\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"0.485", ",", "0.456", ",", "0.406"}], "}"}]}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dec", "=", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Class\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"\"\<InputDepth\>\"", "\[Rule]", "3"}]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"7793d8e4-5c79-454a-ad3d-e89a77241495"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNetEnc", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{"trainedNet", ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "enc"}]}], " ", "]"}]}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"9b680b15-276a-4ec6-aaef-d46b5cace70e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"500\"", "\"500\"", 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 3, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 3, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    4096, 3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "22", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ResizeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["TransposeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox["\"\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"893ca89c-ffaa-4306-9cd9-02062acc92e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNetDec", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{"trainedNetEnc", ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "dec"}]}], " ", "]"}]}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"fe890bc5-2372-449b-89c3-b6db2f6571b1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 3, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 3, "$InputSize" -> {500, 500}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "conv1a" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 500, 500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 64, 
                    "$InputSize" -> {500, 500}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "conv1a"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a_plus", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2a_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1_plus", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b1_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {250, 250}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "2b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2_plus", "Outputs", "Output"]}], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "2b2_plus" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 250, 250}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 128, 
                    "$InputSize" -> {250, 250}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 250, 250}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "2b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a_plus", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3a_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1_plus", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b1_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {125, 125}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "3b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2_plus", "Outputs", "Output"]}], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "3b2_plus" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 125, 125}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 256, 
                    "$InputSize" -> {125, 125}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 125, 125}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "3b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a_plus", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4a_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1_plus", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b1_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2_plus", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b2_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b3_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3_plus", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b3_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b4_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b3_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4_plus", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b4_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "4b5_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b4_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5_plus", "Outputs", "Output"]}], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "4b5_plus" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "4b5_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a_plus", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5a_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b1_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1_plus", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b1_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {2, 2}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "5b2_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b1_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2_plus", "Outputs", "Output"]}], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "5b2_plus" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 512, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.3, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "6a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "5b2_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a_plus", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "6a_plus" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {4, 4}, "Dilation" -> {4, 4}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 1024, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 63, 63}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_do" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$GroupNumber" -> 1, "$InputChannels" -> 2048, 
                    "$InputSize" -> {63, 63}, "$OutputSize" -> {63, 63}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "7a_plus" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "6a_plus"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_do", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a_plus", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a_plus", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    4096, 3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$GroupNumber" -> 1, 
                    "$InputChannels" -> 4096, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "conv6a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "conv1a"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Inputs", "2a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Inputs", "2b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Inputs", "2b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Inputs", "3a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Inputs", "3b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Inputs", "3b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Inputs", "4a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Inputs", "4b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Inputs", "4b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Inputs", "4b3_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Inputs", "4b4_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Inputs", "4b5_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Inputs", "5a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Inputs", "5b1_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Inputs", "5b2_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Inputs", "6a_plus"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6a_relu", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {12, 12}, 
                    "Dilation" -> {12, 12}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {63, 63}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Resize", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{500, 500}], 
                    "Resampling" -> "Linear", "Dimensionality" -> 2, 
                    "$Channels" -> 2, "$InputSize" -> {63, 63}, 
                    "$OutputSize" -> {500, 500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 63, 63}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 500, 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {500, 500}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, "VarianceImage" -> 
                    None], 
                    
                    NeuralNetworks`TensorT[{3, 500, 500}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 3, "Dimensions" -> 2, 
                    "$Rank" -> 2], 
                    
                    NeuralNetworks`TensorT[{500, 500, 2}, 
                    NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "22", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"63\"", "\"63\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ResizeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\"", 
                    "\"500\"", "\"500\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["TransposeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\"", 
                    "\"500\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"f5cc6382-93c4-45fd-9109-7782d6003e65"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestFile", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Volumes/ECG/Project \
WSS/AerialImageDataset/train/MXFiles/File10.mx\>\"", "]"}]}], ";"}]], "Input",\

 CellLabel->"In[30]:=",ExpressionUUID->"1f7b854d-640a-493c-a648-b64580fed58a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{"imageDataSet", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"ea3e338c-0cfe-4a8a-9991-acb896633d3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedNetDec", "[", 
   RowBox[{"Import", "[", 
    RowBox[{"imageDataSet", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "//", "Image"}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"8de6b0bb-6c2c-48d0-a93d-e1df17df1b9e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 598},
WindowMargins->{{175, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 7, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "LastModified"->{
  Cell[704, 24, 222, 4, 36, "TemplateInstructions",ExpressionUUID->"b4592abc-43f8-42aa-b1b7-e79936ced8f2",
   CellTags->"LastModified"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"LastModified", 2681008, 48005}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 118, 0, 160, "Title",ExpressionUUID->"6eb8d7e2-68b2-40b9-8975-a91f4583550b"],
Cell[704, 24, 222, 4, 36, "TemplateInstructions",ExpressionUUID->"b4592abc-43f8-42aa-b1b7-e79936ced8f2",
 CellTags->"LastModified"],
Cell[929, 30, 331, 5, 81, "Text",ExpressionUUID->"ad89a79b-2f79-4340-8328-8983ddc25c86"],
Cell[CellGroupData[{
Cell[1285, 39, 86, 0, 69, "Chapter",ExpressionUUID->"f915ceb0-8ac6-4aed-9a4f-fef1b9b2353b"],
Cell[CellGroupData[{
Cell[1396, 43, 86, 0, 65, "Subchapter",ExpressionUUID->"531b5bef-53b0-4bda-8afb-7839e58309c9"],
Cell[1485, 45, 101, 0, 38, "CodeText",ExpressionUUID->"a18d1093-42c1-4075-a811-b2953c4c8cd0"],
Cell[CellGroupData[{
Cell[1611, 49, 196, 3, 30, "Input",ExpressionUUID->"f91a5832-de81-4c02-af5a-ef4e9a977e86"],
Cell[1810, 54, 155, 1, 34, "Output",ExpressionUUID->"dc865f2b-6cab-48da-bac3-f82a31891fb4"]
}, Open  ]],
Cell[1980, 58, 133, 0, 38, "CodeText",ExpressionUUID->"bcc4d48b-f63b-4600-803d-433ebeee5534"],
Cell[2116, 60, 749, 20, 73, "Input",ExpressionUUID->"fd8bfb15-d513-42db-a0b5-c618894cb7c2"],
Cell[2868, 82, 99, 0, 38, "CodeText",ExpressionUUID->"914b8e88-1635-428b-868a-c275413ce874"],
Cell[2970, 84, 486, 13, 52, "Input",ExpressionUUID->"43f867f5-921a-479e-9f72-c25bf65a5c4b"],
Cell[3459, 99, 150, 2, 38, "CodeText",ExpressionUUID->"65628466-50ca-4574-8d9a-a897ff408cdc"],
Cell[3612, 103, 455, 12, 52, "Input",ExpressionUUID->"e0b37e1d-7a3a-4ca2-9cc2-4098b1829131"],
Cell[4070, 117, 102, 0, 38, "CodeText",ExpressionUUID->"fe425d33-3416-4de0-90cc-3fcc1621227c"],
Cell[CellGroupData[{
Cell[4197, 121, 308, 7, 30, "Input",ExpressionUUID->"89f67a38-625f-43a2-9691-5052af513d87"],
Cell[4508, 130, 112, 1, 34, "Output",ExpressionUUID->"c545143b-7ad9-4e90-9f64-0c7f68272176"]
}, Open  ]],
Cell[4635, 134, 185, 3, 38, "CodeText",ExpressionUUID->"650fd6fe-9aa7-458f-b3b4-5edb6c30785d"],
Cell[CellGroupData[{
Cell[4845, 141, 149, 2, 30, "Input",ExpressionUUID->"392715b9-3a39-4ff1-bc0d-e98024f2203d"],
Cell[4997, 145, 109, 1, 34, "Output",ExpressionUUID->"cec562a9-8594-4b87-b3c5-44d5190b8ec4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5155, 152, 92, 0, 65, "Subchapter",ExpressionUUID->"b71203ef-8de2-4d85-b90e-a1874d711b1f"],
Cell[5250, 154, 287, 5, 30, "Input",ExpressionUUID->"d43a2ca4-596b-4e36-b904-550908aa596e"],
Cell[5540, 161, 396, 9, 30, "Input",ExpressionUUID->"c11a142e-09df-496f-9100-8778cc59814f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5973, 175, 85, 0, 65, "Subchapter",ExpressionUUID->"bc292344-c874-47fc-aa3b-daec9a4ab95c"],
Cell[6061, 177, 116, 0, 35, "Text",ExpressionUUID->"622aa79b-6b7e-44c9-a3c1-00d7c466fc57"],
Cell[6180, 179, 241, 5, 30, "Input",ExpressionUUID->"348ae733-b7bc-45f7-b790-450278a25234"],
Cell[6424, 186, 403, 11, 30, "Input",ExpressionUUID->"f68865b2-5502-44e2-ba6d-42cded56ea35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6864, 202, 88, 0, 65, "Subchapter",ExpressionUUID->"4ea55356-bf1b-48a8-a4ee-fa354471679a"],
Cell[6955, 204, 249, 6, 30, "Input",ExpressionUUID->"89a8b1f0-8a87-4781-9e1c-5d6bd4bb6c50"],
Cell[7207, 212, 463, 13, 30, "Input",ExpressionUUID->"f571e71d-2992-42d1-b26c-f3bad7e62c96"],
Cell[7673, 227, 107, 0, 38, "CodeText",ExpressionUUID->"6b0cffd3-a8c9-4253-bd6d-65332cdc178e"],
Cell[CellGroupData[{
Cell[7805, 231, 181, 3, 30, "Input",ExpressionUUID->"838c25cd-1a5f-4578-b784-f6822b1ff187"],
Cell[7989, 236, 121, 1, 34, "Output",ExpressionUUID->"d253a785-8b88-43db-9659-a3abef0f6eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8147, 242, 87, 0, 67, "Section",ExpressionUUID->"e557db27-c514-4a08-9842-fd25135ebd81"],
Cell[8237, 244, 137, 1, 38, "CodeText",ExpressionUUID->"bf18ccb7-efb9-47ed-a1cc-c66543de4080"],
Cell[8377, 247, 1881, 43, 319, "Code",ExpressionUUID->"648a0aa0-b3a9-4400-8cda-4d86e61a8bdf"],
Cell[10261, 292, 91, 0, 38, "CodeText",ExpressionUUID->"ec8bfb0f-06a4-440b-9efa-d77f64a22b86"],
Cell[CellGroupData[{
Cell[10377, 296, 359, 9, 30, "Input",ExpressionUUID->"10c6e71a-68af-4224-9c5a-5478f3379b88"],
Cell[10739, 307, 136, 1, 34, "Output",ExpressionUUID->"0a5807dd-3c37-42d0-96bf-24d8a8912de3"]
}, Open  ]],
Cell[10890, 311, 408, 10, 52, "Input",ExpressionUUID->"bcdb8c9e-8658-4051-8561-7afd944281b0"],
Cell[11301, 323, 666, 19, 52, "Input",ExpressionUUID->"6891584e-21b6-4a69-a0c8-f1962105b991"],
Cell[11970, 344, 151, 2, 38, "CodeText",ExpressionUUID->"1e494a3f-def2-4085-b63c-564180ec301f"],
Cell[12124, 348, 630, 16, 52, "Input",ExpressionUUID->"0ea0074d-bc84-40e6-9d08-d254f0e69e92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12791, 369, 137, 1, 67, "Section",ExpressionUUID->"252dd6fa-4802-4fe9-8df9-dc16ea1fff70"],
Cell[12931, 372, 102, 0, 38, "CodeText",ExpressionUUID->"31c176e3-24a4-490c-af98-939837a74e8c"],
Cell[13036, 374, 404, 10, 30, "Input",ExpressionUUID->"a0f86900-c676-4621-b23f-e2dd8e7b7da0"],
Cell[CellGroupData[{
Cell[13465, 388, 137, 1, 48, "Subsection",ExpressionUUID->"425c2f60-58fe-4231-ae62-1c712a28606b"],
Cell[CellGroupData[{
Cell[13627, 393, 579, 15, 73, "Input",ExpressionUUID->"1391198a-8e2c-46dc-822e-4ecb9e39fa8f"],
Cell[14209, 410, 156, 3, 34, "Output",ExpressionUUID->"4d5c814a-67fd-46a8-85c4-fb28a4501383"],
Cell[14368, 415, 156, 3, 34, "Output",ExpressionUUID->"54a5f8ac-92fc-4742-a3ed-2d53ead87904"]
}, Open  ]],
Cell[14539, 421, 505, 13, 30, "Input",ExpressionUUID->"af7e71f9-a6da-4711-ad5c-e2650d729373"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15117, 442, 81, 0, 69, "Chapter",ExpressionUUID->"70ef821b-333a-4d27-b65f-fc94bbed1d15"],
Cell[CellGroupData[{
Cell[15223, 446, 90, 0, 65, "Subchapter",ExpressionUUID->"b7792add-1b2d-49ac-b515-c3c08ec79db1"],
Cell[15316, 448, 151, 2, 38, "CodeText",ExpressionUUID->"7aa4c8ac-a952-4993-9f30-5c13e099bdf5"],
Cell[CellGroupData[{
Cell[15492, 454, 248, 6, 30, "Input",ExpressionUUID->"e2972e30-e0b9-4e7d-8211-d1f0acd67ddc"],
Cell[15743, 462, 270563, 5029, 75, "Output",ExpressionUUID->"46d6a355-dca3-41df-8786-6e8662ae395b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286343, 5496, 117, 0, 67, "Section",ExpressionUUID->"b88ee345-233b-4dfa-b4c1-e2880e2379b7"],
Cell[286463, 5498, 120, 0, 38, "CodeText",ExpressionUUID->"76bebb61-c311-4bbf-9e43-88545a117156"],
Cell[CellGroupData[{
Cell[286608, 5502, 584, 14, 52, "Input",ExpressionUUID->"948ee0a2-c099-4307-a405-61677c30e7c4"],
Cell[287195, 5518, 271356, 5047, 76, "Output",ExpressionUUID->"34834fed-adbf-4be0-b013-82a6ccb2fd28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558588, 10570, 94, 0, 54, "Subsection",ExpressionUUID->"b4803689-f318-4d0a-8cf6-7abd4a561cb4"],
Cell[558685, 10572, 114, 0, 38, "CodeText",ExpressionUUID->"b91a2fe4-fd0e-4eae-94ab-0cf7ecce3c14"],
Cell[CellGroupData[{
Cell[558824, 10576, 227, 5, 30, "Input",ExpressionUUID->"3ead8a7b-64dc-4ce6-9091-0c24ec492c7c"],
Cell[559054, 10583, 264420, 4909, 76, "Output",ExpressionUUID->"76a6fe66-0957-4c37-9094-f6f092b35711"]
}, Open  ]],
Cell[823489, 15495, 132, 0, 38, "CodeText",ExpressionUUID->"cd0d3ff6-bc54-4114-81a1-a4b518a70ebc"],
Cell[CellGroupData[{
Cell[823646, 15499, 845, 21, 73, "Input",ExpressionUUID->"1ac40f1d-b38b-4092-b87c-61fa477fbfe0"],
Cell[824494, 15522, 195328, 3418, 76, "Output",ExpressionUUID->"a7bb54fb-bfed-4e2f-9121-9fbb713511fc"]
}, Open  ]],
Cell[1019837, 18943, 134, 0, 38, "CodeText",ExpressionUUID->"ff3a3785-e83c-428d-b2a5-0e79343461d7"],
Cell[CellGroupData[{
Cell[1019996, 18947, 348, 8, 30, "Input",ExpressionUUID->"4d5bf403-48a8-44e3-91ea-3fc8ead1407b"],
Cell[1020347, 18957, 18187, 369, 75, "Output",ExpressionUUID->"d17873b7-5d0b-4dae-bb73-03b0196e17db"]
}, Open  ]],
Cell[1038549, 19329, 154, 2, 38, "CodeText",ExpressionUUID->"cc0975d9-3335-44d8-bd8a-d819ae4f3ed5"],
Cell[CellGroupData[{
Cell[1038728, 19335, 673, 18, 52, "Input",ExpressionUUID->"181b5c3b-7ec8-461b-9fb7-4e9e0673e497"],
Cell[1039404, 19355, 199637, 3502, 75, "Output",ExpressionUUID->"bb8eb00d-f5fb-4b4a-984e-b1d53145121e"]
}, Open  ]],
Cell[1239056, 22860, 100, 0, 38, "CodeText",ExpressionUUID->"e5c223ff-ee13-4e34-922a-6ffee660145e"],
Cell[CellGroupData[{
Cell[1239181, 22864, 185, 3, 30, "Input",ExpressionUUID->"a01fab52-10fa-4a9d-a938-8719631622e9"],
Cell[1239369, 22869, 198900, 3485, 248, "Output",ExpressionUUID->"31b6bf11-d15a-4968-8e69-88308b3efce0"]
}, Open  ]],
Cell[1438284, 26357, 291, 6, 30, "Input",ExpressionUUID->"6e6a478e-561c-4e52-981a-5aab227b07ac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1438624, 26369, 78, 0, 67, "Section",ExpressionUUID->"ef3d612d-8d12-4265-bca9-c2d57a6ccfa6"],
Cell[1438705, 26371, 116, 0, 38, "CodeText",ExpressionUUID->"804b7a98-15e4-479a-ab71-095ea70740eb"],
Cell[CellGroupData[{
Cell[1438846, 26375, 500, 13, 52, "Input",ExpressionUUID->"b08e2096-d14d-4c2a-9ba9-6b99b3cb8f5b"],
Cell[1439349, 26390, 201311, 3359, 75, "Output",ExpressionUUID->"bda4c0e1-fad8-48f0-a2a6-0227359669fa"]
}, Open  ]],
Cell[1640675, 29752, 98, 0, 38, "CodeText",ExpressionUUID->"91fe5b57-90e3-4097-bf89-3be6419d21cf"],
Cell[CellGroupData[{
Cell[1640798, 29756, 183, 3, 30, "Input",ExpressionUUID->"32cdd7e4-3f77-4d2c-ae13-55f99770c0bc"],
Cell[1640984, 29761, 200734, 3340, 75, "Output",ExpressionUUID->"58b329d0-0a85-4393-93e6-1beb1c2d45ec"]
}, Open  ]],
Cell[1841733, 33104, 108, 0, 38, "CodeText",ExpressionUUID->"72dab291-480d-4eaa-b652-0dbdd14d2dbc"],
Cell[CellGroupData[{
Cell[1841866, 33108, 220, 5, 30, "Input",ExpressionUUID->"e4502c17-f471-4b32-b244-057fcf519cc3"],
Cell[1842089, 33115, 151, 1, 34, "Output",ExpressionUUID->"f04e4332-dab4-443b-9f4a-f8a37d73afbb"]
}, Open  ]],
Cell[1842255, 33119, 92, 0, 38, "CodeText",ExpressionUUID->"18b07605-307f-40be-9488-3978231d024e"],
Cell[CellGroupData[{
Cell[1842372, 33123, 507, 11, 30, "Input",ExpressionUUID->"a011fe51-7d3a-4371-87a3-72592ae86bec"],
Cell[1842882, 33136, 125, 1, 34, "Output",ExpressionUUID->"c5acb2ab-7d36-44b2-ab79-5e134b09ef0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1843044, 33142, 226, 5, 30, "Input",ExpressionUUID->"f976eb43-1c88-4b76-b85e-62091816cdd6"],
Cell[1843273, 33149, 125, 1, 34, "Output",ExpressionUUID->"d281157b-d328-4ac9-bce6-c0f85b2e38a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1843471, 33158, 92, 0, 69, "Chapter",ExpressionUUID->"afabc96c-6480-4a5c-8a91-b0edb93c2964"],
Cell[CellGroupData[{
Cell[1843588, 33162, 85, 0, 65, "Subchapter",ExpressionUUID->"16ca443a-0b40-4c5d-afe0-190bc837914a"],
Cell[1843676, 33164, 110, 0, 38, "CodeText",ExpressionUUID->"34bff1df-7be4-489a-8749-164b0301e15d"],
Cell[CellGroupData[{
Cell[1843811, 33168, 545, 15, 73, "Input",ExpressionUUID->"5c699b60-1ec7-47d8-aeab-38743840c580"],
Cell[1844359, 33185, 183, 2, 34, "Output",ExpressionUUID->"11600d36-12f7-4f89-bf27-d2f98b1ca4a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1844579, 33192, 86, 0, 67, "Section",ExpressionUUID->"74164fd8-f240-4d80-b54c-a9b13c251c17"],
Cell[CellGroupData[{
Cell[1844690, 33196, 89, 0, 54, "Subsection",ExpressionUUID->"d8596816-a0bd-49e7-9b86-323df97d9a18"],
Cell[1844782, 33198, 88, 0, 38, "CodeText",ExpressionUUID->"45526cc8-a93b-47ba-a939-aba5dd6709a1"],
Cell[1844873, 33200, 533, 15, 72, "Code",ExpressionUUID->"07fcbf73-3fe3-413c-b395-d89092e54542"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1845443, 33220, 105, 0, 54, "Subsection",ExpressionUUID->"28ca32e5-eb2c-41ea-ba0b-162aa962bac0"],
Cell[1845551, 33222, 134, 0, 38, "CodeText",ExpressionUUID->"0db7d084-3db1-49d3-b1fe-9d756b910e36"],
Cell[1845688, 33224, 2187, 58, 243, "Code",ExpressionUUID->"fa2c85d2-5978-4a72-9f05-bdf743d1c6d9"],
Cell[1847878, 33284, 147, 2, 38, "CodeText",ExpressionUUID->"dc327f98-688c-42bd-b939-a6806b04aab4"],
Cell[1848028, 33288, 447, 12, 30, "Input",ExpressionUUID->"5a8e8a38-5b33-47ea-9ca6-b6ca6b0b6db9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1848512, 33305, 88, 0, 54, "Subsection",ExpressionUUID->"8fdb7428-2d2e-42dd-b436-992c65c60038"],
Cell[1848603, 33307, 121, 0, 38, "CodeText",ExpressionUUID->"d19e1440-db9d-4bd2-a6e9-62f42e046d25"],
Cell[1848727, 33309, 213, 4, 30, "Input",ExpressionUUID->"cec4f03f-993d-4c71-930b-388c72c17136"],
Cell[CellGroupData[{
Cell[1848965, 33317, 276, 6, 52, "Input",ExpressionUUID->"30722d1c-3f3e-440f-b290-fe979ca0dd32"],
Cell[1849244, 33325, 134, 2, 34, "Output",ExpressionUUID->"e440f39b-8635-472a-85d1-6c11f5f1a2b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1849415, 33332, 257, 6, 73, "Input",ExpressionUUID->"660cb822-1de4-4849-913b-5769b077397e"],
Cell[1849675, 33340, 111, 1, 34, "Output",ExpressionUUID->"26284c11-5a80-4fe9-bb45-46650b738367"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1849871, 33350, 94, 0, 69, "Chapter",ExpressionUUID->"8fe39e5a-780a-4b9a-9576-c1c4fea5b1a4"],
Cell[CellGroupData[{
Cell[1849990, 33354, 94, 0, 67, "Section",ExpressionUUID->"1fb6bce5-f8ed-4535-997f-4218267cba81"],
Cell[CellGroupData[{
Cell[1850109, 33358, 90, 0, 54, "Subsection",ExpressionUUID->"4e56395e-8fb4-4a1d-97c3-d9beff1bfbc3"],
Cell[1850202, 33360, 478, 13, 115, "Input",ExpressionUUID->"7309f90f-f9cb-4957-81eb-70d75e448e0a"],
Cell[1850683, 33375, 406, 11, 30, "Input",ExpressionUUID->"b87732a6-bd50-41f9-b2a4-e1ee4f7a45bf"],
Cell[CellGroupData[{
Cell[1851114, 33390, 148, 2, 30, "Input",ExpressionUUID->"ae5119ce-329d-4ecd-8533-431cbbe44757"],
Cell[1851265, 33394, 110, 1, 34, "Output",ExpressionUUID->"cacd4a07-8677-4f2d-b8e5-836bf40de510"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1851412, 33400, 192, 4, 30, "Input",ExpressionUUID->"0b2858d3-f15a-4e8e-8f7d-b5b2115dce70"],
Cell[1851607, 33406, 498, 13, 71, "Output",ExpressionUUID->"ecf38887-3c17-4e65-bf5e-10cf6649c689"]
}, Open  ]],
Cell[1852120, 33422, 414, 11, 30, "Input",ExpressionUUID->"d19636d2-a03f-4769-ae38-270cb60d5595"],
Cell[CellGroupData[{
Cell[1852559, 33437, 191, 4, 30, "Input",ExpressionUUID->"35891db0-7420-4051-91ae-a2083001de0c"],
Cell[1852753, 33443, 11799, 216, 52, "Output",ExpressionUUID->"5e15be45-12ab-4cb8-a7e9-4fcea31dac16"]
}, Open  ]],
Cell[1864567, 33662, 275, 7, 30, "Input",ExpressionUUID->"4ba87484-9a1d-439c-8395-539d93216144"],
Cell[CellGroupData[{
Cell[1864867, 33673, 178, 3, 30, "Input",ExpressionUUID->"64deb36a-412a-4fe7-a56b-7a2122422b7c"],
Cell[1865048, 33678, 2744, 58, 82, "Output",ExpressionUUID->"f616141d-11a7-45a7-a2e0-e4a22afc2c3d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1867853, 33743, 86, 0, 65, "Subchapter",ExpressionUUID->"c1136be3-7041-4ccd-a840-3883810ddb5f"],
Cell[1867942, 33745, 2434, 61, 224, "Code",ExpressionUUID->"33679b83-e63c-4b65-b479-3fb8f307a121"],
Cell[1870379, 33808, 151, 2, 30, "Input",ExpressionUUID->"6af23282-5c1c-407b-9d82-8fc7d1527df3"],
Cell[CellGroupData[{
Cell[1870555, 33814, 427, 9, 30, "Input",ExpressionUUID->"8c97bd56-df12-4e70-9dd4-d0ef39c8a07f"],
Cell[CellGroupData[{
Cell[1871007, 33827, 363, 9, 26, "Print",ExpressionUUID->"3c25f8d2-0838-4a59-97b3-c43ddf68b197"],
Cell[1871373, 33838, 81, 0, 25, "Echo",ExpressionUUID->"d8cc3b84-e0e6-4211-bf35-cf3ba74c836a"]
}, Open  ]],
Cell[1871469, 33841, 8110, 217, 183, "Output",ExpressionUUID->"a2aa07dc-6051-4055-b430-a18c9fa82175"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1879616, 34063, 286, 6, 30, "Input",ExpressionUUID->"d78b7116-912a-4b17-84bb-20c58dd89ca8"],
Cell[1879905, 34071, 152, 3, 34, "Output",ExpressionUUID->"1b81fff7-9fab-4485-8a4b-1d13954c8c73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1880094, 34079, 81, 0, 54, "Subsection",ExpressionUUID->"01a2f2bb-34f5-48e0-bb3c-6f30e35a6e6a"],
Cell[1880178, 34081, 172, 3, 30, "Input",ExpressionUUID->"26a6bb4f-3c27-432f-a0fd-e8acea9cb348"],
Cell[CellGroupData[{
Cell[1880375, 34088, 247, 6, 30, "Input",ExpressionUUID->"24500fb0-7105-4e81-9d3e-2e10b967730f"],
Cell[1880625, 34096, 200720, 3336, 75, "Output",ExpressionUUID->"b1d4b0c2-3280-4e2f-9096-2971d3d8b306"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2081382, 37437, 205, 4, 30, "Input",ExpressionUUID->"be30aa53-bc37-473e-8adf-89fddce296b0"],
Cell[2081590, 37443, 169, 2, 34, "Output",ExpressionUUID->"ecc6e1d4-c9c5-4279-8a0e-81f94af08c6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2081796, 37450, 552, 13, 73, "Input",ExpressionUUID->"6b926bc7-e768-4ee6-9096-8cdd624582dc"],
Cell[2082351, 37465, 538, 11, 42, "Message",ExpressionUUID->"a0399feb-4f6e-4701-8f22-8cde3ca0ab84"],
Cell[2082892, 37478, 113, 1, 34, "Output",ExpressionUUID->"97819b36-4fee-4e0c-8344-8197c6725030"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2083042, 37484, 275, 6, 30, "Input",ExpressionUUID->"3c9e7840-6fa6-4a24-81d7-302d95b7b660"],
Cell[2083320, 37492, 198710, 3484, 77, "Output",ExpressionUUID->"b6088aa0-3e16-4a4c-9720-1c44fcc9406d"]
}, Open  ]],
Cell[2282045, 40979, 747, 21, 52, "Input",ExpressionUUID->"7793d8e4-5c79-454a-ad3d-e89a77241495"],
Cell[CellGroupData[{
Cell[2282817, 41004, 264, 5, 30, "Input",ExpressionUUID->"9b680b15-276a-4ec6-aaef-d46b5cace70e"],
Cell[2283084, 41011, 198668, 3478, 76, "Output",ExpressionUUID->"893ca89c-ffaa-4306-9cd9-02062acc92e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2481789, 44494, 268, 5, 30, "Input",ExpressionUUID->"fe890bc5-2372-449b-89c3-b6db2f6571b1"],
Cell[2482060, 44501, 197798, 3461, 75, "Output",ExpressionUUID->"f5cc6382-93c4-45fd-9109-7782d6003e65"]
}, Open  ]],
Cell[2679873, 47965, 274, 8, 52, "Input",ExpressionUUID->"1f7b854d-640a-493c-a648-b64580fed58a"],
Cell[2680150, 47975, 221, 5, 30, "Input",ExpressionUUID->"ea3e338c-0cfe-4a8a-9991-acb896633d3b"],
Cell[2680374, 47982, 274, 6, 30, "Input",ExpressionUUID->"8de6b0bb-6c2c-48d0-a93d-e1df17df1b9e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

